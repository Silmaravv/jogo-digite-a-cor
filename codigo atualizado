import java.util.Random;
import java.util.Scanner;
import java.util.concurrent.*;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;

public class jogador{
  String nome;
  int pontuacao;

  public void jogador(String nome, int pontuacao)
}

public class Main {
  
    public static final String ANSI_RESET = "\u001B[0m";
    public static final String ANSI_RED = "\u001B[31m";
    public static final String ANSI_GREEN = "\u001B[32m";
    public static final String ANSI_YELLOW = "\u001B[33m";
    public static final String ANSI_BLUE = "\u001B[34m";
    public static final String ANSI_PURPLE = "\u001B[35m";
    public static final String ANSI_CYAN = "\u001B[36m";
    public static final String ANSI_WHITE = "\u001B[37m";

    /*public static void menu(String[] args){
      
    }*/
   
    public static void jogo(String[] args) {
      Random gerador = new Random();
      Scanner menu = new Scanner(System.in);
      boolean continuar = true;
      while (continuar){
      System.out.println("BEM VINDO(A) CHOQUE DE CORES!");
      System.out.println("");
      System.out.println("Escolha a opção desejada:" );
      System.out.println("1- INICIAR");
      System.out.println("2- RANKING");
      System.out.println("3- SAIR");
      System.out.println("");
      System.out.println("");
      byte escolha = menu.nextByte();

      //ExecutorService executor = Executors.newSingleThreadExecutor();
      boolean acertou = true;
      
      Scanner tempo = new Scanner(System.in);
      if (escolha == 1){
        ExecutorService executor = Executors.newSingleThreadExecutor();
      System.out.println("JOGO INICIADO!");
      System.out.println("");
      System.out.println(" \nSerá que você consegue bater o record?");
      Scanner ler = new Scanner(System.in);
      while (acertou) {


        System.out.println();
        System.out.println("Digite a cor da palavra o mais rápido possível.");
        System.out.println();

        String[] cores = {"azul", "vermelho", "amarelo", "verde", "roxo", "ciano", "branco"};
        String[] coresSorteio = {ANSI_BLUE, ANSI_RED, ANSI_YELLOW, ANSI_GREEN, ANSI_PURPLE, ANSI_CYAN, ANSI_WHITE};
        int posicaoCorPintada = gerador.nextInt(0, coresSorteio.length);
        String corSorteadaPintada = coresSorteio[posicaoCorPintada];
        String corSorteadaEscrita = cores[gerador.nextInt(0, cores.length)];

        System.out.println(corSorteadaPintada + corSorteadaEscrita);
        System.out.println(ANSI_RESET);
       Future <String> future = executor.submit(() -> {
         System.out.println("resposta:");
         return ler.next();
       });
        ExecutorService contadorExecutor = Executors.newSingleThreadExecutor();
        contadorExecutor.submit(() ->{
          //exibe o tempo para o usuário
          for(int i = 7; i>0;i--){System.out.print("\r tempo restante: " + i+ " ");
        try{
          Thread.sleep(1000);
        } catch (InterruptedException e){
          Thread.currentThread().interrupt();
        }
        }
          //System.out.println(" Tempo esgotado!!! ");
        });
       // contador de tempo
        try {
          String cor = future.get(7, TimeUnit.SECONDS);
          acertou = 
            cor.equals(cores[posicaoCorPintada]);


 //        roxo é igual a roxo?
        acertou = cor.equals(cores[posicaoCorPintada]);

        if(acertou) {
          System.out.println("Acertou miseravi");
        }

        else {System.out.println("ruim demais, tente novamente" );
             }


        } catch (TimeoutException e){
          System.out.println("Tempo esgotado! você perdeu.");
            acertou = false;
          future.cancel(true);
        }catch (Exception e){
          System.out.println("Erro!" + e.getMessage());
          acertou = false;
        }
      contadorExecutor.shutdown();
      }  
executor.shutdown();
tempo.close(); 
      }
      else if (escolha == 2){
        System.out.println("== RANKING ==");
        
      }
      else if(escolha == 3){
       System.out.println("SAINDO...");
        continuar = false;
      }
      else{
        System.out.println("COMANDO INVÁLIDO! SELECIONE NOVAMENTE:");
        System.out.println("");
      }
      }
      //ler.close();
    }
}
